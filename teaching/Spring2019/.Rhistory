obj4<-matern.image.cov( grid=grid, theta=1, smoothness=100, setup=TRUE)
look4<- sim.rf( obj4)
# take a look at first two
set.panel(2,2)
image.plot( grid$x, grid$y, look1)
title("Matern 0.5")
image.plot( grid$x, grid$y, look2)
title("Matern 1")
obj3<-matern.image.cov( grid=grid, theta=1, smoothness=2, setup=TRUE)
look3<- sim.rf( obj3)
obj4<-wendland.image.cov( grid=grid, delta=1, setup=TRUE)
obj4<-wendland.image.cov( grid=grid, setup=TRUE)
grid
obj2
obj4<-wendland.image.cov( grid=grid, theta=10, setup=TRUE)
wendland.image.cov()
wendland.image.cov
obj4<-wendland.image.cov( grid=grid, theta=2, setup=TRUE)
obj4<-wendland.image.cov( grid=grid)
rm(list=ls())
library(fields)
grid<- list( x= seq( 0,10,length.out = 100), y= seq(0,10,length.out = 100))
obj4<-wendland.image.cov( grid=grid, theta=2, setup=TRUE)
wendland.image.cov
grid<- list( x= seq( 0,10,length.out = 10), y= seq(0,10,length.out = 10))
obj4<-wendland.image.cov( grid=grid, theta=2, setup=TRUE)
obj4<-wendland.image.cov( ind1=seq( 0,10,length.out = 10), ind2 = seq( 0,10,length.out = 10), theta=2, setup=TRUE)
grid<- list( x= seq( 0,10,length.out = 30), y= seq(0,10,length.out = 30))
obj1<-matern.image.cov( grid=grid, theta=1, smoothness=.5, setup=TRUE)
look1<- sim.rf( obj1)
dev.off()
image.plot( grid$x, grid$y, look1)
grid<- list( x= seq( 0,10,length.out = 300), y= seq(0,10,length.out = 300))
obj1<-matern.image.cov( grid=grid, theta=1, smoothness=.5, setup=TRUE)
look1<- sim.rf( obj1)
image.plot( grid$x, grid$y, look1)
obj2<-matern.image.cov( grid=grid, theta=1, smoothness=1, setup=TRUE)
look2<- sim.rf( obj2)
image.plot( grid$x, grid$y, look2)
obj3<-matern.image.cov( grid=grid, theta=5, smoothness=1, setup=TRUE)
look3<- sim.rf( obj3)
obj3<-matern.image.cov( grid=grid, theta=2, smoothness=1, setup=TRUE)
look3<- sim.rf( obj3)
obj3<-matern.image.cov( grid=grid, theta=.5, smoothness=1, setup=TRUE)
look3<- sim.rf( obj3)
image.plot( grid$x, grid$y, look3)
grid<- list( x= seq( 0,10,length.out = 100), y= seq(0,10,length.out = 100))
obj1<-matern.image.cov( grid=grid, theta=1, smoothness=.5, setup=TRUE)
look1<- sim.rf( obj1)
image.plot( grid$x, grid$y, look1)
obj2<-matern.image.cov( grid=grid, theta=1, smoothness=1, setup=TRUE)
look2<- sim.rf( obj2)
image.plot( grid$x, grid$y, look2)
obj3<-matern.image.cov( grid=grid, theta=.5, smoothness=1, setup=TRUE)
look3<- sim.rf( obj3)
image.plot( grid$x, grid$y, look3)
obj3<-matern.image.cov( grid=grid, theta=1.5, smoothness=1, setup=TRUE)
look3<- sim.rf( obj3)
summary(obj1)
?sim.rf
obj3<-matern.image.cov( grid=grid, theta=1.5, smoothness=2, setup=TRUE)
look3<- sim.rf( obj3)
obj3<-matern.image.cov( grid=grid, theta=.5, smoothness=2, setup=TRUE)
look3<- sim.rf( obj3)
image.plot( grid$x, grid$y, look3)
obj1<-matern.image.cov( grid=grid, theta=.5, smoothness=.5, setup=TRUE)
look1<- sim.rf( obj1)
image.plot( grid$x, grid$y, look1)
obj2<-matern.image.cov( grid=grid, theta=.5, smoothness=1, setup=TRUE)
look2<- sim.rf( obj2)
image.plot( grid$x, grid$y, look2)
obj3<-matern.image.cov( grid=grid, theta=.5, smoothness=2, setup=TRUE)
look3<- sim.rf( obj3)
image.plot( grid$x, grid$y, look3)
grid<- list( x= seq( 0,10,length.out = 200), y= seq(0,10,length.out = 200))
obj1<-matern.image.cov( grid=grid, theta=.5, smoothness=.5, setup=TRUE)
look1<- sim.rf( obj1)
image.plot( grid$x, grid$y, look1)
obj2<-matern.image.cov( grid=grid, theta=.5, smoothness=1, setup=TRUE)
look2<- sim.rf( obj2)
image.plot( grid$x, grid$y, look2)
obj3<-matern.image.cov( grid=grid, theta=.5, smoothness=2, setup=TRUE)
look3<- sim.rf( obj3)
image.plot( grid$x, grid$y, look3)
obj3<-matern.image.cov( grid=grid, theta=.5, smoothness=20, setup=TRUE)
look3<- sim.rf( obj3)
obj3<-matern.image.cov( grid=grid, theta=.05, smoothness=20, setup=TRUE)
look3<- sim.rf( obj3)
set.panel(1,3)
image.plot( grid$x, grid$y, look1)
title("Matern 0.5")
image.plot( grid$x, grid$y, look2)
title("Matern 1")
image.plot( grid$x, grid$y, look3)
title("Matern 2 ")
obj4<-wendland.image.cov( theta=2, setup=TRUE)
obj4<-wendland.image.cov( theta=.5, setup=TRUE)
obj4<-wendland.image.cov( grid=grid, theta=.5, setup=TRUE)
obj4<-wendland.image.cov( grid=grid, theta=.01, setup=TRUE)
# take a look at first two
set.panel(1,3)
image.plot( grid$x, grid$y, look1)
title("Matern, nu=0.5")
image.plot( grid$x, grid$y, look2)
title("Matern, nu=1")
image.plot( grid$x, grid$y, look3)
title("Matern, nu=2 ")
?Matern
Matern( d, nu=.5)
### Matern covariance function
d<- seq( 0, 15,,200)
Matern( d, nu=.5)
### Matern covariance function
d<- seq( 0, 15,,200)
y<- cbind(  Matern( d, nu=.5),
Matern( d, nu=1.0),
Matern( d, nu=2.0),
Matern( d, nu=100))
matplot( d, y, type="l", lty=1, lwd=2)
y<- cbind(  Matern( d, nu=.5),
Matern( d, nu=1.0),
Matern( d, nu=2.0))
matplot( d, y, type="l", lty=1, lwd=2)
dev.off()
matplot( d, y, type="l", lty=1, lwd=2, main='Matern with range 1')
?legend
?matplot
matplot( d, y, type="l", lty=1, lwd=2, col=1:3, main='Matern with range 1')
legend('topright', legend=c('nu=0.5', 'nu=1', 'nu=2'), col=1:3)
legend('topright', legend=c('nu=0.5', 'nu=1', 'nu=2'), col=1:3, lty=1)
legend('topright', legend=c('nu=0.5', 'nu=1', 'nu=2'), col=1:3, lty=1, lwd=2)
?Matern
z<- cbind(  Matern( d, range=1),
Matern( d, range=2),
Matern( d, range=3))
matplot( d, z, type="l", lty=1, lwd=2, col=1:3, main='Matern with smoothness ,5')
legend('topright', legend=c('range=1', 'range=2', 'range=3'), col=1:3, lty=1, lwd=2)
##############
### Matern covariance function
d<- seq( 0, 15,length.out = 200)
y<- cbind(  Matern( d, nu=.5),
Matern( d, nu=1.0),
Matern( d, nu=2.0))
z<- cbind(  Matern( d, range=1),
Matern( d, range=2),
Matern( d, range=3))
set.panel(1,2)
matplot( d, y, type="l", lty=1, lwd=2, col=1:3, main='Matern with range 1')
legend('topright', legend=c('nu=0.5', 'nu=1', 'nu=2'), col=1:3, lty=1, lwd=2)
matplot( d, z, type="l", lty=1, lwd=2, col=1:3, main='Matern with smoothness 0.5')
legend('topright', legend=c('range=1', 'range=2', 'range=3'), col=1:3, lty=1, lwd=2)
dev.off()
##############
### 1D GP with Matern
set.seed(123)
d<- seq( 0, 10,length.out =  200)
nu=.5 # 1 1.5
range=1
my.Matern=function(d1,d2){
Matern(abs(d1-d2), range=range, nu=nu)
}
my.cov=outer (d,d, my.Matern)
gp = mvrnorm(3, mu=rep(0, length(d)), Sigma = my.cov)
my.gp = data.frame(x=d,y=t(gp))
ggplot(my.gp, aes(x=x))+
geom_line(aes(y = y.1, colour = "y.1")) +
geom_line(aes(y = y.2, colour = "y.2")) +
geom_line(aes(y = y.3, colour = "y.3")) +
ylab('y') + ggtitle(paste("Matern(nu=", nu,")"))
grid<- list( x= seq( 0,10,length.out = 200), y= seq(0,10,length.out = 200))
library(MASS)
library(ggplot2)
library(fields)
##############
### 1D GP with Matern
set.seed(123)
d<- seq( 0, 10,length.out =  200)
nu=.5 # 1 1.5
range=1
my.Matern=function(d1,d2){
Matern(abs(d1-d2), range=range, nu=nu)
}
my.cov=outer (d,d, my.Matern)
gp = mvrnorm(3, mu=rep(0, length(d)), Sigma = my.cov)
my.gp = data.frame(x=d,y=t(gp))
ggplot(my.gp, aes(x=x))+
geom_line(aes(y = y.1, colour = "y.1")) +
geom_line(aes(y = y.2, colour = "y.2")) +
geom_line(aes(y = y.3, colour = "y.3")) +
ylab('y') + ggtitle(paste("Matern(nu=", nu,")"))
dev.off()
grid<- list( x= seq( 0,10,length.out = 200), y= seq(0,10,length.out = 200))
obj1<-matern.image.cov( grid=grid, theta=.5, smoothness=.5, setup=TRUE)
look1<- sim.rf( obj1)
obj2<-matern.image.cov( grid=grid, theta=.5, smoothness=1, setup=TRUE)
look2<- sim.rf( obj2)
obj3<-matern.image.cov( grid=grid, theta=.5, smoothness=2, setup=TRUE)
look3<- sim.rf( obj3)
# take a look at first two
set.panel(1,3)
image.plot( grid$x, grid$y, look1)
title("Matern, nu=0.5")
image.plot( grid$x, grid$y, look2)
title("Matern, nu=1")
image.plot( grid$x, grid$y, look3)
title("Matern, nu=2 ")
library(fields)
data=read.table('data1.txt',header=T)
nlon=length(unique(data[,1]))
nlat=length(unique(data[,2]))
loc=data[,1:2]
y=data[,3]
varigram=vgram(loc, y, lon.lat=TRUE,N=15)
par(mfrow=c(1,2))
##here obtained is semivarigram,then times 2 to get varigram##
##Plot the varigram cloud
plot(varigram$d,2*varigram$vgram,xlab="distance",ylab="varigram",main="Variogram cloud")
lines(varigram$centers, varigram$stats["mean",], col=4,lwd=3)
bplot.xy(varigram$d, sqrt(2*varigram$vgram),ylab="sqrt(VG)", N=15, outlier=TRUE, main="Boxplots of variogram")
lines(varigram$centers, sqrt(2*varigram$stats["mean",]), col=4,lwd=3)
graphics.off()
###directional variogram, fix the latitude.
data1=data[101:150,]
data2=data[201:250,]
data3=data[301:350,]
data4=data[401:450,]
vgram_lat1=vgram(data1[,1:2], data1[,3], lon.lat=TRUE, N=10)
vgram_lat2=vgram(data2[,1:2], data2[,3], lon.lat=TRUE, N=10)
vgram_lat3=vgram(data3[,1:2], data3[,3], lon.lat=TRUE, N=10)
vgram_lat4=vgram(data4[,1:2], data4[,3], lon.lat=TRUE, N=10)
par(mfrow=c(2,2))
bplot.xy(vgram_lat1$d, sqrt(2*vgram_lat1$vgram),ylab="sqrt(VG)", N=10, outlier=TRUE, main="latitude -49.72")
lines(vgram_lat1$centers, sqrt(2*vgram_lat1$stats["mean",]), col=4, lwd=3)
bplot.xy(vgram_lat2$d, sqrt(2*vgram_lat2$vgram),ylab="sqrt(VG)", N=10, outlier=TRUE, main="latitude -9.94")
lines(vgram_lat2$centers, sqrt(2*vgram_lat2$stats["mean",]), col=4, lwd=3)
bplot.xy(vgram_lat3$d, sqrt(2*vgram_lat3$vgram),ylab="sqrt(VG)", N=10, outlier=TRUE, main="latitude 29.83")
lines(vgram_lat3$centers, sqrt(2*vgram_lat3$stats["mean",]), col=4, lwd=3)
bplot.xy(vgram_lat4$d, sqrt(2*vgram_lat4$vgram),ylab="sqrt(VG)", N=10, outlier=TRUE, main="latitude 69.61")
lines(vgram_lat4$centers, sqrt(2*vgram_lat4$stats["mean",]), col=4, lwd=3)
lines(vgram_lat4$centers, sqrt(2*vgram_lat4$stats["mean",]), col=4, lwd=3)
graphics.off()
###use variog4 to plot variogram in 4 directions
library(geoR)
install.packages("geoR", lib="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
data2=as.list(data)
var4=variog4(coords =loc,data =y)
variog4
###use variog4 to plot variogram in 4 directions
library(geoR)
library(geoR)
library(fields)
### ozone data set, day 16
## Quilt plot
data(ozone2)
ozone2
?ozone2
# plot 16 day of ozone data set
quilt.plot(ozone2$lon.lat, ozone2$y[16,])
US(add=TRUE, col="grey", lwd=2)
?quilt.plot
summary(ozone2)
summary(ozone2$y)
dim(ozone2$y)
good<- !is.na(ozone2$y[16,])
x<- ozone2$lon.lat[good,]
y<- ozone2$y[16,good]
## variogram plots
par(mfrow=c(1,2))
look<-vgram(x,y, N=15, lon.lat=TRUE)
plot(look, pch=19)
## or some boxplot bin summaries
brk<- seq(0, 250,, (25 + 1) ) # will give 25 bins.
boxplotVGram(look, breaks=brk, plot.args=list(type="o"))
plot(look, add=TRUE, breaks=brk, col=4)
dev.off()
fit <- Krig(ChicagoO3$x, ChicagoO3$y, theta=20)
summary(fit) # summary of fit
par(mfrow=c(2,2))
plot(fit) # four diagnostic plots of fit
dev.off()
par(mfrow=c(2,2))
plot(fit) # four diagnostic plots of fit
dev.off()
surface(fit, type="C") # look at the surface
# predict at data
predict(fit)
# predict using 7.5 effective degrees of freedom:
predict(fit, df=7.5)
# predict on a grid (grid chosen here by defaults)
out<- predictSurface(fit)
surface(out, type="C") # option "C" our favorite
# predict at arbitrary points (10,-10) and (20, 15)
xnew<- rbind(c(10, -10), c(20, 15))
predict(fit, xnew)
# standard errors of prediction based on covariance model.
predictSE(fit, xnew)
# surface of standard errors on a default grid
predictSurfaceSE(fit)-> out.p # this takes some time!
surface(out.p, type="C")
points(fit$x)
## Using another stationary covariance.
# smoothness is the shape parameter for the Matern
fit <- Krig(ChicagoO3$x, ChicagoO3$y,
Covariance="Matern", theta=10, smoothness=1.0)
summary( fit)
dev.off()
library(fields)
data=read.table('data1.txt',header=T)
head(data)
quilt.plot(data)
image.plot(data)
?image.plot
library(MASS)
library(ggplot2)
library(fields)
##############
### Matern covariance function
d<- seq( 0, 15,length.out = 200)
y<- cbind(  Matern( d, nu=.5),
Matern( d, nu=1.0),
Matern( d, nu=2.0))
z<- cbind(  Matern( d, range=1),
Matern( d, range=2),
Matern( d, range=3))
set.panel(1,2)
matplot( d, y, type="l", lty=1, lwd=2, col=1:3, main='Matern with range 1')
legend('topright', legend=c('nu=0.5', 'nu=1', 'nu=2'), col=1:3, lty=1, lwd=2)
matplot( d, z, type="l", lty=1, lwd=2, col=1:3, main='Matern with smoothness 0.5')
legend('topright', legend=c('range=1', 'range=2', 'range=3'), col=1:3, lty=1, lwd=2)
dev.off()
##############
### 1D GP with Matern
set.seed(123)
set.panel(1,2)
matplot( d, y, type="l", lty=1, lwd=2, col=1:3, main='Matern with range 1')
legend('topright', legend=c('nu=0.5', 'nu=1', 'nu=2'), col=1:3, lty=1, lwd=2)
matplot( d, z, type="l", lty=1, lwd=2, col=1:3, main='Matern with smoothness 0.5')
legend('topright', legend=c('range=1', 'range=2', 'range=3'), col=1:3, lty=1, lwd=2)
dev.off()
##############
### 1D GP with Matern
set.seed(123)
d<- seq( 0, 10,length.out =  200)
nu=.5 # 1 1.5
range=1
my.Matern=function(d1,d2){
Matern(abs(d1-d2), range=range, nu=nu)
}
my.cov=outer (d,d, my.Matern)
gp = mvrnorm(3, mu=rep(0, length(d)), Sigma = my.cov)
my.gp = data.frame(x=d,y=t(gp))
ggplot(my.gp, aes(x=x))+
geom_line(aes(y = y.1, colour = "y.1")) +
geom_line(aes(y = y.2, colour = "y.2")) +
geom_line(aes(y = y.3, colour = "y.3")) +
ylab('y') + ggtitle(paste("Matern(nu=", nu,")"))
dev.off()
grid<- list( x= seq( 0,10,length.out = 200), y= seq(0,10,length.out = 200))
obj1<-matern.image.cov( grid=grid, theta=.5, smoothness=.5, setup=TRUE)
look1<- sim.rf( obj1)
obj2<-matern.image.cov( grid=grid, theta=.5, smoothness=1, setup=TRUE)
look2<- sim.rf( obj2)
obj3<-matern.image.cov( grid=grid, theta=.5, smoothness=2, setup=TRUE)
look3<- sim.rf( obj3)
# take a look at first two
set.panel(1,3)
image.plot( grid$x, grid$y, look1)
title("Matern, nu=0.5")
image.plot( grid$x, grid$y, look2)
title("Matern, nu=1")
image.plot( grid$x, grid$y, look3)
title("Matern, nu=2 ")
nlon=length(unique(data[,1]))
nlat=length(unique(data[,2]))
loc=data[,1:2]
y=data[,3]
varigram=vgram(loc, y, lon.lat=TRUE,N=15)
par(mfrow=c(1,2))
##here obtained is semivarigram,then times 2 to get varigram##
##Plot the varigram cloud
plot(varigram$d,2*varigram$vgram,xlab="distance",ylab="varigram",main="Variogram cloud")
lines(varigram$centers, varigram$stats["mean",], col=4,lwd=3)
dim(data)
bplot.xy(varigram$d, sqrt(2*varigram$vgram),ylab="sqrt(VG)", N=15, outlier=TRUE, main="Boxplots of variogram")
lines(varigram$centers, sqrt(2*varigram$stats["mean",]), col=4,lwd=3)
graphics.off()
###directional variogram, fix the latitude.
data1=data[101:150,]
data2=data[201:250,]
data3=data[301:350,]
data4=data[401:450,]
vgram_lat1=vgram(data1[,1:2], data1[,3], lon.lat=TRUE, N=10)
vgram_lat2=vgram(data2[,1:2], data2[,3], lon.lat=TRUE, N=10)
vgram_lat3=vgram(data3[,1:2], data3[,3], lon.lat=TRUE, N=10)
vgram_lat4=vgram(data4[,1:2], data4[,3], lon.lat=TRUE, N=10)
# pdf('lat.pdf',width=14,height=14)
par(mfrow=c(2,2))
bplot.xy(vgram_lat1$d, sqrt(2*vgram_lat1$vgram),ylab="sqrt(VG)", N=10, outlier=TRUE, main="latitude -49.72")
lines(vgram_lat1$centers, sqrt(2*vgram_lat1$stats["mean",]), col=4, lwd=3)
bplot.xy(vgram_lat2$d, sqrt(2*vgram_lat2$vgram),ylab="sqrt(VG)", N=10, outlier=TRUE, main="latitude -9.94")
lines(vgram_lat2$centers, sqrt(2*vgram_lat2$stats["mean",]), col=4, lwd=3)
bplot.xy(vgram_lat3$d, sqrt(2*vgram_lat3$vgram),ylab="sqrt(VG)", N=10, outlier=TRUE, main="latitude 29.83")
lines(vgram_lat3$centers, sqrt(2*vgram_lat3$stats["mean",]), col=4, lwd=3)
bplot.xy(vgram_lat4$d, sqrt(2*vgram_lat4$vgram),ylab="sqrt(VG)", N=10, outlier=TRUE, main="latitude 69.61")
lines(vgram_lat4$centers, sqrt(2*vgram_lat4$stats["mean",]), col=4, lwd=3)
dev.off()
nan=c(60,
88,
63,
98,
61,
70,
30,
87,
71,
69,
41)
summary(nan)
library(MASS)
library(ggplot2)
library(fields)
y<- cbind(  Matern( d, nu=.5),
Matern( d, nu=1.0),
Matern( d, nu=2.0))
z<- cbind(  Matern( d, range=1),
Matern( d, range=2),
Matern( d, range=3))
set.panel(1,2)
matplot( d, y, type="l", lty=1, lwd=2, col=1:3, main='Matern with range 1')
set.panel(1,2)
matplot( d, y, type="l", lty=1, lwd=2, col=1:3, main='Matern with range 1')
legend('topright', legend=c('nu=0.5', 'nu=1', 'nu=2'), col=1:3, lty=1, lwd=2)
set.panel(1,2)
matplot( d, y, type="l", lty=1, lwd=2, col=1:3, main='Matern with range 1')
legend('topright', legend=c('nu=0.5', 'nu=1', 'nu=2'), col=1:3, lty=1, lwd=2)
matplot( d, z, type="l", lty=1, lwd=2, col=1:3, main='Matern with smoothness 0.5')
legend('topright', legend=c('range=1', 'range=2', 'range=3'), col=1:3, lty=1, lwd=2)
dev.off()
my.Matern=function(d1,d2){
Matern(abs(d1-d2), range=range, nu=nu)
}
my.cov=outer (d,d, my.Matern)
gp = mvrnorm(3, mu=rep(0, length(d)), Sigma = my.cov)
my.gp = data.frame(x=d,y=t(gp))
ggplot(my.gp, aes(x=x))+
geom_line(aes(y = y.1, colour = "y.1")) +
geom_line(aes(y = y.2, colour = "y.2")) +
geom_line(aes(y = y.3, colour = "y.3")) +
ylab('y') + ggtitle(paste("Matern(nu=", nu,")"))
nu=1.5 # 1 1.5
range=1
my.Matern=function(d1,d2){
Matern(abs(d1-d2), range=range, nu=nu)
}
my.cov=outer (d,d, my.Matern)
gp = mvrnorm(3, mu=rep(0, length(d)), Sigma = my.cov)
my.gp = data.frame(x=d,y=t(gp))
ggplot(my.gp, aes(x=x))+
geom_line(aes(y = y.1, colour = "y.1")) +
geom_line(aes(y = y.2, colour = "y.2")) +
geom_line(aes(y = y.3, colour = "y.3")) +
ylab('y') + ggtitle(paste("Matern(nu=", nu,")"))
grid<- list( x= seq( 0,10,length.out = 200), y= seq(0,10,length.out = 200))
obj1<-matern.image.cov( grid=grid, theta=.5, smoothness=.5, setup=TRUE)
look1<- sim.rf( obj1)
obj2<-matern.image.cov( grid=grid, theta=.5, smoothness=1, setup=TRUE)
look2<- sim.rf( obj2)
obj3<-matern.image.cov( grid=grid, theta=.5, smoothness=2, setup=TRUE)
look3<- sim.rf( obj3)
# take a look at first two
set.panel(1,3)
image.plot( grid$x, grid$y, look1)
title("Matern, nu=0.5")
image.plot( grid$x, grid$y, look2)
title("Matern, nu=1")
image.plot( grid$x, grid$y, look3)
title("Matern, nu=2 ")
dev.off()
library(fields)
data=read.table('data1.txt',header=T)
nlon=length(unique(data[,1]))
nlat=length(unique(data[,2]))
loc=data[,1:2]
y=data[,3]
quilt.plot(data)
varigram=vgram(loc, y, lon.lat=TRUE,N=15)
par(mfrow=c(1,2))
##here obtained is semivarigram,then times 2 to get varigram##
##Plot the varigram cloud
plot(varigram$d,2*varigram$vgram,xlab="distance",ylab="varigram",main="Variogram cloud")
lines(varigram$centers, varigram$stats["mean",], col=4,lwd=3)
bplot.xy(varigram$d, sqrt(2*varigram$vgram),ylab="sqrt(VG)", N=15, outlier=TRUE, main="Boxplots of variogram")
lines(varigram$centers, sqrt(2*varigram$stats["mean",]), col=4,lwd=3)
###directional variogram, fix the latitude.
data1=data[101:150,]
data2=data[201:250,]
data3=data[301:350,]
data4=data[401:450,]
vgram_lat1=vgram(data1[,1:2], data1[,3], lon.lat=TRUE, N=10)
vgram_lat2=vgram(data2[,1:2], data2[,3], lon.lat=TRUE, N=10)
vgram_lat3=vgram(data3[,1:2], data3[,3], lon.lat=TRUE, N=10)
vgram_lat4=vgram(data4[,1:2], data4[,3], lon.lat=TRUE, N=10)
# pdf('lat.pdf',width=14,height=14)
par(mfrow=c(2,2))
bplot.xy(vgram_lat1$d, sqrt(2*vgram_lat1$vgram),ylab="sqrt(VG)", N=10, outlier=TRUE, main="latitude -49.72")
lines(vgram_lat1$centers, sqrt(2*vgram_lat1$stats["mean",]), col=4, lwd=3)
bplot.xy(vgram_lat2$d, sqrt(2*vgram_lat2$vgram),ylab="sqrt(VG)", N=10, outlier=TRUE, main="latitude -9.94")
lines(vgram_lat2$centers, sqrt(2*vgram_lat2$stats["mean",]), col=4, lwd=3)
bplot.xy(vgram_lat3$d, sqrt(2*vgram_lat3$vgram),ylab="sqrt(VG)", N=10, outlier=TRUE, main="latitude 29.83")
lines(vgram_lat3$centers, sqrt(2*vgram_lat3$stats["mean",]), col=4, lwd=3)
bplot.xy(vgram_lat4$d, sqrt(2*vgram_lat4$vgram),ylab="sqrt(VG)", N=10, outlier=TRUE, main="latitude 69.61")
lines(vgram_lat4$centers, sqrt(2*vgram_lat4$stats["mean",]), col=4, lwd=3)
